#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
"""
import os
import sys
import subprocess
from pathlib import Path

def run_command(command: str) -> bool:
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã"""
    print(f"üîÑ –í—ã–ø–æ–ª–Ω—è—é: {command}")
    result = subprocess.run(command, shell=True, capture_output=True, text=True)
    
    if result.returncode == 0:
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {command}")
        if result.stdout:
            print(result.stdout)
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {command}")
        if result.stderr:
            print(result.stderr)
        return False

def init_alembic():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Alembic"""
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Alembic...")
    return run_command("alembic init alembic")

def create_migration(message: str):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print(f"üìù –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏: {message}")
    return run_command(f'alembic revision --autogenerate -m "{message}"')

def upgrade_database():
    """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π"""
    print("‚¨ÜÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...")
    return run_command("alembic upgrade head")

def downgrade_database(revision: str = "-1"):
    """–û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π"""
    print(f"‚¨áÔ∏è –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π –¥–æ {revision}...")
    return run_command(f"alembic downgrade {revision}")

def show_migrations():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –º–∏–≥—Ä–∞—Ü–∏–π"""
    print("üìã –ò—Å—Ç–æ—Ä–∏—è –º–∏–≥—Ä–∞—Ü–∏–π:")
    return run_command("alembic history")

def show_current():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é"""
    print("üìç –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è:")
    return run_command("alembic current")

def create_initial_migration():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏...")
    
    # –°–æ–∑–¥–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å–æ –≤—Å–µ–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏
    success = create_migration("Initial migration - create all tables")
    
    if success:
        print("‚úÖ –ù–∞—á–∞–ª—å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞")
        print("üí° –¢–µ–ø–µ—Ä—å –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: python migrate.py upgrade")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏")
    
    return success

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 2:
        print("""
üî• Wildfire Prediction - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏—è–º–∏

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  python migrate.py <–∫–æ–º–∞–Ω–¥–∞> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]

–ö–æ–º–∞–Ω–¥—ã:
  init          - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Alembic
  create        - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
  upgrade       - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
  downgrade     - –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π
  history       - –ò—Å—Ç–æ—Ä–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
  current       - –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è
  initial       - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏

–ü—Ä–∏–º–µ—Ä—ã:
  python migrate.py init
  python migrate.py create "Add user table"
  python migrate.py upgrade
  python migrate.py initial
        """)
        return
    
    command = sys.argv[1]
    
    if command == "init":
        init_alembic()
    elif command == "create":
        if len(sys.argv) < 3:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏")
            return
        create_migration(sys.argv[2])
    elif command == "upgrade":
        upgrade_database()
    elif command == "downgrade":
        revision = sys.argv[2] if len(sys.argv) > 2 else "-1"
        downgrade_database(revision)
    elif command == "history":
        show_migrations()
    elif command == "current":
        show_current()
    elif command == "initial":
        create_initial_migration()
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")

if __name__ == "__main__":
    main() 