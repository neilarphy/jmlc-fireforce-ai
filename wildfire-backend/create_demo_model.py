#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–º–æ ML –º–æ–¥–µ–ª–∏
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.services.model_storage_service import ModelStorageService

def main():
    """–°–æ–∑–¥–∞—Ç—å –¥–µ–º–æ –º–æ–¥–µ–ª—å"""
    print("ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ ML –º–æ–¥–µ–ª–∏...")
    
    try:
        storage = ModelStorageService()
        filename = storage.create_demo_model()
        
        if filename:
            print(f"‚úÖ –î–µ–º–æ –º–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞: {filename}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª–∏
            current_model = storage.get_current_model_info()
            if current_model:
                print(f"üìä –ú–æ–¥–µ–ª—å: {current_model['name']} v{current_model['version']}")
                print(f"üìÅ –§–∞–π–ª: {current_model['filename']}")
                print(f"üìè –†–∞–∑–º–µ—Ä: {current_model['size_mb']} MB")
                print(f"üìÖ –°–æ–∑–¥–∞–Ω–∞: {current_model['created_at']}")
                
                if current_model['metrics']:
                    print("üìà –ú–µ—Ç—Ä–∏–∫–∏:")
                    for metric, value in current_model['metrics'].items():
                        print(f"   {metric}: {value}")
                
                if current_model['features']:
                    print(f"üîß –ü—Ä–∏–∑–Ω–∞–∫–∏ ({len(current_model['features'])}):")
                    for feature in current_model['features']:
                        print(f"   - {feature}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–º–æ –º–æ–¥–µ–ª–∏")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main() 