"""Create wildfire tables in fireforceai schema

Revision ID: df52137d54bd
Revises: 128b4c2c56b6
Create Date: 2025-08-03 01:53:10.256714

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'df52137d54bd'
down_revision = '128b4c2c56b6'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('batch_predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('batch_id', sa.String(length=100), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('region_bounds', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('progress', sa.Float(), nullable=True),
    sa.Column('total_predictions', sa.Integer(), nullable=True),
    sa.Column('completed_predictions', sa.Integer(), nullable=True),
    sa.Column('failed_predictions', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_batch_prediction_id', 'batch_predictions', ['batch_id'], unique=False)
    op.create_index('idx_batch_prediction_status', 'batch_predictions', ['status'], unique=False)
    op.create_index(op.f('ix_batch_predictions_id'), 'batch_predictions', ['id'], unique=False)
    op.create_table('error_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_type', sa.String(length=100), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=False),
    sa.Column('module', sa.String(length=100), nullable=True),
    sa.Column('function', sa.String(length=100), nullable=True),
    sa.Column('line_number', sa.Integer(), nullable=True),
    sa.Column('stack_trace', sa.Text(), nullable=True),
    sa.Column('request_data', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('is_resolved', sa.Boolean(), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_error_log_created', 'error_logs', ['created_at'], unique=False)
    op.create_index('idx_error_log_resolved', 'error_logs', ['is_resolved'], unique=False)
    op.create_index('idx_error_log_type', 'error_logs', ['error_type'], unique=False)
    op.create_index(op.f('ix_error_logs_id'), 'error_logs', ['id'], unique=False)
    op.create_table('fire_predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('prediction_date', sa.DateTime(), nullable=False),
    sa.Column('risk_score', sa.Float(), nullable=True),
    sa.Column('probability', sa.Float(), nullable=True),
    sa.Column('risk_level', sa.String(length=20), nullable=True),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('model_name', sa.String(length=100), nullable=True),
    sa.Column('prediction_type', sa.String(length=20), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_fire_prediction_coords', 'fire_predictions', ['latitude', 'longitude'], unique=False)
    op.create_index('idx_fire_prediction_date', 'fire_predictions', ['prediction_date'], unique=False)
    op.create_index(op.f('ix_fire_predictions_id'), 'fire_predictions', ['id'], unique=False)
    op.create_table('fire_statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('region', sa.String(length=100), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('total_fires', sa.Integer(), nullable=True),
    sa.Column('area_burned', sa.Float(), nullable=True),
    sa.Column('damage_estimate', sa.Float(), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_fire_statistics_region', 'fire_statistics', ['region'], unique=False)
    op.create_index('idx_fire_statistics_year', 'fire_statistics', ['year'], unique=False)
    op.create_index(op.f('ix_fire_statistics_id'), 'fire_statistics', ['id'], unique=False)
    op.create_table('data_processing_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('process_type', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('records_processed', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('processing_time_seconds', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='fireforceai'
    )
    op.create_index(op.f('ix_fireforceai_data_processing_logs_id'), 'data_processing_logs', ['id'], unique=False, schema='fireforceai')
    op.create_table('historical_fires',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('dt', sa.Date(), nullable=False),
    sa.Column('type_name', sa.String(length=50), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('weekday', sa.Integer(), nullable=True),
    sa.Column('lon_cell', sa.Float(), nullable=True),
    sa.Column('lat_cell', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_historical_fire_coords', 'historical_fires', ['latitude', 'longitude'], unique=False)
    op.create_index('idx_historical_fire_date', 'historical_fires', ['dt'], unique=False)
    op.create_index(op.f('ix_historical_fires_id'), 'historical_fires', ['id'], unique=False)
    op.create_table('location_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('location_name', sa.String(length=200), nullable=True),
    sa.Column('region', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_location_cache_coords', 'location_cache', ['latitude', 'longitude'], unique=False)
    op.create_index('idx_location_cache_name', 'location_cache', ['location_name'], unique=False)
    op.create_index(op.f('ix_location_cache_id'), 'location_cache', ['id'], unique=False)
    op.create_table('model_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('model_name', sa.String(length=100), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('mlflow_run_id', sa.String(length=100), nullable=True),
    sa.Column('model_path', sa.String(length=500), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('precision', sa.Float(), nullable=True),
    sa.Column('recall', sa.Float(), nullable=True),
    sa.Column('f1_score', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('hyperparameters', sa.Text(), nullable=True),
    sa.Column('feature_columns', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_model_version_active', 'model_versions', ['is_active'], unique=False)
    op.create_index('idx_model_version_name', 'model_versions', ['model_name'], unique=False)
    op.create_index(op.f('ix_model_versions_id'), 'model_versions', ['id'], unique=False)
    op.create_table('popular_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('location_name', sa.String(length=200), nullable=True),
    sa.Column('request_count', sa.Integer(), nullable=True),
    sa.Column('last_requested', sa.DateTime(), nullable=True),
    sa.Column('region', sa.String(length=100), nullable=True),
    sa.Column('risk_level', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_popular_location_coords', 'popular_locations', ['latitude', 'longitude'], unique=False)
    op.create_index('idx_popular_location_usage', 'popular_locations', ['request_count'], unique=False)
    op.create_index(op.f('ix_popular_locations_id'), 'popular_locations', ['id'], unique=False)
    op.create_table('raw_fire_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('dt', sa.Date(), nullable=False, comment='Дата пожара'),
    sa.Column('type_name', sa.String(length=50), nullable=True, comment='Тип пожара'),
    sa.Column('type_id', sa.Integer(), nullable=True, comment='ID типа пожара'),
    sa.Column('longitude', sa.Float(), nullable=False, comment='Долгота'),
    sa.Column('latitude', sa.Float(), nullable=False, comment='Широта'),
    sa.Column('processed', sa.Boolean(), nullable=True, comment='Обработана ли запись'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_raw_fire_coords', 'raw_fire_data', ['latitude', 'longitude'], unique=False)
    op.create_index('idx_raw_fire_date_coords', 'raw_fire_data', ['dt', 'latitude', 'longitude'], unique=False)
    op.create_index(op.f('ix_raw_fire_data_dt'), 'raw_fire_data', ['dt'], unique=False)
    op.create_index(op.f('ix_raw_fire_data_id'), 'raw_fire_data', ['id'], unique=False)
    op.create_index(op.f('ix_raw_fire_data_latitude'), 'raw_fire_data', ['latitude'], unique=False)
    op.create_index(op.f('ix_raw_fire_data_longitude'), 'raw_fire_data', ['longitude'], unique=False)
    op.create_table('raw_weather_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False, comment='Широта'),
    sa.Column('longitude', sa.Float(), nullable=False, comment='Долгота'),
    sa.Column('timestamp', sa.DateTime(), nullable=False, comment='Дата/время измерения'),
    sa.Column('temperature_2m', sa.Float(), nullable=True, comment='Температура на высоте 2м (°C)'),
    sa.Column('relative_humidity', sa.Float(), nullable=True, comment='Относительная влажность (%)'),
    sa.Column('wind_u', sa.Float(), nullable=True, comment='U-компонента ветра (м/с)'),
    sa.Column('wind_v', sa.Float(), nullable=True, comment='V-компонента ветра (м/с)'),
    sa.Column('precipitation', sa.Float(), nullable=True, comment='Осадки (мм)'),
    sa.Column('data_source', sa.String(length=20), nullable=True, comment='Источник данных'),
    sa.Column('processed', sa.Boolean(), nullable=True, comment='Обработана ли запись'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_raw_weather_coords', 'raw_weather_data', ['latitude', 'longitude'], unique=False)
    op.create_index('idx_raw_weather_coords_time', 'raw_weather_data', ['latitude', 'longitude', 'timestamp'], unique=False)
    op.create_index(op.f('ix_raw_weather_data_id'), 'raw_weather_data', ['id'], unique=False)
    op.create_index(op.f('ix_raw_weather_data_latitude'), 'raw_weather_data', ['latitude'], unique=False)
    op.create_index(op.f('ix_raw_weather_data_longitude'), 'raw_weather_data', ['longitude'], unique=False)
    op.create_index(op.f('ix_raw_weather_data_timestamp'), 'raw_weather_data', ['timestamp'], unique=False)
    op.create_table('system_health',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('service_name', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('response_time', sa.Float(), nullable=True),
    sa.Column('error_rate', sa.Float(), nullable=True),
    sa.Column('uptime', sa.Float(), nullable=True),
    sa.Column('last_check', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('configuration', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_system_health_service', 'system_health', ['service_name'], unique=False)
    op.create_index('idx_system_health_status', 'system_health', ['status'], unique=False)
    op.create_index(op.f('ix_system_health_id'), 'system_health', ['id'], unique=False)
    op.create_table('system_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('setting_key', sa.String(length=100), nullable=False),
    sa.Column('setting_value', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('value_type', sa.String(length=20), nullable=True),
    sa.Column('validation_rules', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('setting_key')
    )
    op.create_index('idx_system_settings_category', 'system_settings', ['category'], unique=False)
    op.create_index('idx_system_settings_key', 'system_settings', ['setting_key'], unique=False)
    op.create_index(op.f('ix_system_settings_id'), 'system_settings', ['id'], unique=False)
    op.create_table('training_features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('dt', sa.DateTime(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('humidity', sa.Float(), nullable=True),
    sa.Column('wind_u', sa.Float(), nullable=True),
    sa.Column('wind_v', sa.Float(), nullable=True),
    sa.Column('precipitation', sa.Float(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('weekday', sa.Integer(), nullable=True),
    sa.Column('lat_cell', sa.Float(), nullable=True),
    sa.Column('lon_cell', sa.Float(), nullable=True),
    sa.Column('fire_occurred', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_training_features_coords', 'training_features', ['latitude', 'longitude'], unique=False)
    op.create_index('idx_training_features_date', 'training_features', ['dt'], unique=False)
    op.create_index(op.f('ix_training_features_id'), 'training_features', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('preferences', sa.Text(), nullable=True),
    sa.Column('api_key', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_key'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index('idx_user_email', 'users', ['email'], unique=False)
    op.create_index('idx_user_username', 'users', ['username'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource', sa.String(length=100), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_log_action', 'audit_logs', ['action'], unique=False)
    op.create_index('idx_audit_log_created', 'audit_logs', ['created_at'], unique=False)
    op.create_index('idx_audit_log_user', 'audit_logs', ['user_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_table('prediction_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('prediction_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('task_id', sa.String(length=100), nullable=True),
    sa.Column('prediction_id', sa.Integer(), nullable=True),
    sa.Column('request_type', sa.String(length=20), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['prediction_id'], ['fire_predictions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_prediction_request_status', 'prediction_requests', ['status'], unique=False)
    op.create_index('idx_prediction_request_user', 'prediction_requests', ['user_id'], unique=False)
    op.create_index(op.f('ix_prediction_requests_id'), 'prediction_requests', ['id'], unique=False)
    op.create_table('processed_fire_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('raw_fire_id', sa.Integer(), nullable=True),
    sa.Column('dt', sa.Date(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('weekday', sa.Integer(), nullable=True),
    sa.Column('lon_cell', sa.Float(), nullable=True),
    sa.Column('lat_cell', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['raw_fire_id'], ['raw_fire_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_processed_fire_coords', 'processed_fire_data', ['latitude', 'longitude'], unique=False)
    op.create_index('idx_processed_fire_date', 'processed_fire_data', ['dt'], unique=False)
    op.create_index(op.f('ix_processed_fire_data_id'), 'processed_fire_data', ['id'], unique=False)
    op.create_table('processed_weather_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('raw_weather_id', sa.Integer(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('humidity', sa.Float(), nullable=True),
    sa.Column('wind_u', sa.Float(), nullable=True),
    sa.Column('wind_v', sa.Float(), nullable=True),
    sa.Column('precipitation', sa.Float(), nullable=True),
    sa.Column('lat_cell', sa.Float(), nullable=True),
    sa.Column('lon_cell', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['raw_weather_id'], ['raw_weather_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_processed_weather_coords', 'processed_weather_data', ['latitude', 'longitude'], unique=False)
    op.create_index('idx_processed_weather_coords_time', 'processed_weather_data', ['latitude', 'longitude', 'timestamp'], unique=False)
    op.create_index(op.f('ix_processed_weather_data_id'), 'processed_weather_data', ['id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_token', sa.String(length=255), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_activity', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_token')
    )
    op.create_index('idx_user_session_token', 'user_sessions', ['session_token'], unique=False)
    op.create_index('idx_user_session_user', 'user_sessions', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.drop_index('idx_user_session_user', table_name='user_sessions')
    op.drop_index('idx_user_session_token', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_processed_weather_data_id'), table_name='processed_weather_data')
    op.drop_index('idx_processed_weather_coords_time', table_name='processed_weather_data')
    op.drop_index('idx_processed_weather_coords', table_name='processed_weather_data')
    op.drop_table('processed_weather_data')
    op.drop_index(op.f('ix_processed_fire_data_id'), table_name='processed_fire_data')
    op.drop_index('idx_processed_fire_date', table_name='processed_fire_data')
    op.drop_index('idx_processed_fire_coords', table_name='processed_fire_data')
    op.drop_table('processed_fire_data')
    op.drop_index(op.f('ix_prediction_requests_id'), table_name='prediction_requests')
    op.drop_index('idx_prediction_request_user', table_name='prediction_requests')
    op.drop_index('idx_prediction_request_status', table_name='prediction_requests')
    op.drop_table('prediction_requests')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index('idx_audit_log_user', table_name='audit_logs')
    op.drop_index('idx_audit_log_created', table_name='audit_logs')
    op.drop_index('idx_audit_log_action', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index('idx_user_username', table_name='users')
    op.drop_index('idx_user_email', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_training_features_id'), table_name='training_features')
    op.drop_index('idx_training_features_date', table_name='training_features')
    op.drop_index('idx_training_features_coords', table_name='training_features')
    op.drop_table('training_features')
    op.drop_index(op.f('ix_system_settings_id'), table_name='system_settings')
    op.drop_index('idx_system_settings_key', table_name='system_settings')
    op.drop_index('idx_system_settings_category', table_name='system_settings')
    op.drop_table('system_settings')
    op.drop_index(op.f('ix_system_health_id'), table_name='system_health')
    op.drop_index('idx_system_health_status', table_name='system_health')
    op.drop_index('idx_system_health_service', table_name='system_health')
    op.drop_table('system_health')
    op.drop_index(op.f('ix_raw_weather_data_timestamp'), table_name='raw_weather_data')
    op.drop_index(op.f('ix_raw_weather_data_longitude'), table_name='raw_weather_data')
    op.drop_index(op.f('ix_raw_weather_data_latitude'), table_name='raw_weather_data')
    op.drop_index(op.f('ix_raw_weather_data_id'), table_name='raw_weather_data')
    op.drop_index('idx_raw_weather_coords_time', table_name='raw_weather_data')
    op.drop_index('idx_raw_weather_coords', table_name='raw_weather_data')
    op.drop_table('raw_weather_data')
    op.drop_index(op.f('ix_raw_fire_data_longitude'), table_name='raw_fire_data')
    op.drop_index(op.f('ix_raw_fire_data_latitude'), table_name='raw_fire_data')
    op.drop_index(op.f('ix_raw_fire_data_id'), table_name='raw_fire_data')
    op.drop_index(op.f('ix_raw_fire_data_dt'), table_name='raw_fire_data')
    op.drop_index('idx_raw_fire_date_coords', table_name='raw_fire_data')
    op.drop_index('idx_raw_fire_coords', table_name='raw_fire_data')
    op.drop_table('raw_fire_data')
    op.drop_index(op.f('ix_popular_locations_id'), table_name='popular_locations')
    op.drop_index('idx_popular_location_usage', table_name='popular_locations')
    op.drop_index('idx_popular_location_coords', table_name='popular_locations')
    op.drop_table('popular_locations')
    op.drop_index(op.f('ix_model_versions_id'), table_name='model_versions')
    op.drop_index('idx_model_version_name', table_name='model_versions')
    op.drop_index('idx_model_version_active', table_name='model_versions')
    op.drop_table('model_versions')
    op.drop_index(op.f('ix_location_cache_id'), table_name='location_cache')
    op.drop_index('idx_location_cache_name', table_name='location_cache')
    op.drop_index('idx_location_cache_coords', table_name='location_cache')
    op.drop_table('location_cache')
    op.drop_index(op.f('ix_historical_fires_id'), table_name='historical_fires')
    op.drop_index('idx_historical_fire_date', table_name='historical_fires')
    op.drop_index('idx_historical_fire_coords', table_name='historical_fires')
    op.drop_table('historical_fires')
    op.drop_index(op.f('ix_fireforceai_data_processing_logs_id'), table_name='data_processing_logs', schema='fireforceai')
    op.drop_table('data_processing_logs', schema='fireforceai')
    op.drop_index(op.f('ix_fire_statistics_id'), table_name='fire_statistics')
    op.drop_index('idx_fire_statistics_year', table_name='fire_statistics')
    op.drop_index('idx_fire_statistics_region', table_name='fire_statistics')
    op.drop_table('fire_statistics')
    op.drop_index(op.f('ix_fire_predictions_id'), table_name='fire_predictions')
    op.drop_index('idx_fire_prediction_date', table_name='fire_predictions')
    op.drop_index('idx_fire_prediction_coords', table_name='fire_predictions')
    op.drop_table('fire_predictions')
    op.drop_index(op.f('ix_error_logs_id'), table_name='error_logs')
    op.drop_index('idx_error_log_type', table_name='error_logs')
    op.drop_index('idx_error_log_resolved', table_name='error_logs')
    op.drop_index('idx_error_log_created', table_name='error_logs')
    op.drop_table('error_logs')
    op.drop_index(op.f('ix_batch_predictions_id'), table_name='batch_predictions')
    op.drop_index('idx_batch_prediction_status', table_name='batch_predictions')
    op.drop_index('idx_batch_prediction_id', table_name='batch_predictions')
    op.drop_table('batch_predictions')
    # ### end Alembic commands ### 